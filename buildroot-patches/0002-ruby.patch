--- buildroot/package/ruby/Config.in.orig
+++ buildroot/package/ruby/Config.in
@@ -3,14 +3,11 @@
 	depends on BR2_USE_WCHAR
 	depends on BR2_TOOLCHAIN_HAS_THREADS
 	depends on !BR2_STATIC_LIBS
-	depends on BR2_TOOLCHAIN_GCC_AT_LEAST_4_9
-	depends on BR2_HOST_GCC_AT_LEAST_4_9
 	help
 	  Object Oriented Scripting Language.
 
 	  http://www.ruby-lang.org/
 
-comment "ruby needs a toolchain w/ wchar, threads, dynamic library, gcc >= 4.9, host gcc >= 4.9"
+comment "ruby needs a toolchain w/ wchar, threads, dynamic library"
 	depends on !BR2_USE_WCHAR || !BR2_TOOLCHAIN_HAS_THREADS || \
-		BR2_STATIC_LIBS || !BR2_TOOLCHAIN_GCC_AT_LEAST_4_9 || \
-		!BR2_HOST_GCC_AT_LEAST_4_9
+		BR2_STATIC_LIBS
--- buildroot/package/ruby/ruby.hash.orig
+++ buildroot/package/ruby/ruby.hash
@@ -1,7 +1,6 @@
-# https://www.ruby-lang.org/en/news/2022/11/24/ruby-3-1-3-released/
-sha512  4b0fd334ae56132ba98b8a69adad54bdcf7f7aeabd5eba5b0f0399a3868e2054f9026ca1b1cb2dbb197a9e9b0610b263481949c0623a62071546bc5adff8ca69  ruby-3.1.3.tar.xz
-
+# From https://www.ruby-lang.org/en/news/2017/09/14/ruby-2-4-2-released/
+sha256 748a8980d30141bd1a4124e11745bb105b436fb1890826e0d2b9ea31af27f735  ruby-2.4.2.tar.xz
 # License files, Locally calculated
-sha256  794c384f94396ab07e3e6f53a9f8be093facb7eb4193266024302b93b29e12dc  LEGAL
-sha256  967586d538a28955ec2541910cf63c5ac345fcdea94bfb1f1705a1f6eb36bcbb  COPYING
-sha256  36a9a6e7347214bbba599a412617204e65bff065dcbe5c46f5cb454c80de9eb0  BSDL
+sha256 5cda9584acd5e1096276a375085b7e659fa67a072fd69ec2c3931e54f7f563bb  LEGAL
+sha256 f5eb1b2956d5f7a67b2e5722a3749bc2fe86f9c580f2e3f5a08519cf073b5864  COPYING
+sha256 a5e3042dacb53eebda91f3b1caefbfec8307711df8c4ed1ed20e4e97c43307a4  BSDL
--- buildroot/package/ruby/ruby.mk.orig
+++ buildroot/package/ruby/ruby.mk
@@ -4,33 +4,30 @@
 #
 ################################################################################
 
-RUBY_VERSION_MAJOR = 3.1
-RUBY_VERSION = $(RUBY_VERSION_MAJOR).3
-RUBY_VERSION_EXT = 3.1.0
+RUBY_VERSION_MAJOR = 2.4
+RUBY_VERSION = $(RUBY_VERSION_MAJOR).2
+RUBY_VERSION_EXT = 2.4.0
 RUBY_SITE = http://cache.ruby-lang.org/pub/ruby/$(RUBY_VERSION_MAJOR)
 RUBY_SOURCE = ruby-$(RUBY_VERSION).tar.xz
-
-RUBY_LICENSE = \
-	Ruby or BSD-2-Clause, \
-	BSD-3-Clause, \
-	MIT, \
-	others
-RUBY_LICENSE_FILES = LEGAL COPYING BSDL
-
-RUBY_CPE_ID_VENDOR = ruby-lang
-
 RUBY_DEPENDENCIES = host-pkgconf host-ruby
-HOST_RUBY_DEPENDENCIES = host-pkgconf host-openssl
+HOST_RUBY_DEPENDENCIES = host-pkgconf
 RUBY_MAKE_ENV = $(TARGET_MAKE_ENV)
 RUBY_CONF_OPTS = --disable-install-doc --disable-rpath --disable-rubygems
 HOST_RUBY_CONF_OPTS = \
 	--disable-install-doc \
-	--with-out-ext=curses,readline \
+	--with-out-ext=curses,openssl,readline \
 	--without-gmp
+RUBY_LICENSE = Ruby or BSD-2-Clause, BSD-3-Clause, others
+RUBY_LICENSE_FILES = LEGAL COPYING BSDL
 
-ifeq ($(BR2_TOOLCHAIN_HAS_LIBATOMIC),y)
-RUBY_CONF_ENV += LIBS=-latomic
+RUBY_CFLAGS = $(TARGET_CFLAGS)
+# With some SuperH toolchains (like Sourcery CodeBench 2012.09), ruby fails to
+# build with 'pcrel too far'. This seems to be caused by the -Os option we pass
+# by default. To fix the problem, use standard -O2 optimization instead.
+ifeq ($(BR2_sh),y)
+RUBY_CFLAGS += -O2
 endif
+RUBY_CONF_ENV = CFLAGS="$(RUBY_CFLAGS)"
 
 ifeq ($(BR2_TOOLCHAIN_USES_UCLIBC),y)
 # On uClibc, finite, isinf and isnan are not directly implemented as
@@ -51,12 +48,6 @@
 ifeq ($(BR2_PACKAGE_BERKELEYDB),y)
 RUBY_DEPENDENCIES += berkeleydb
 endif
-ifeq ($(BR2_PACKAGE_LIBFFI),y)
-RUBY_DEPENDENCIES += libffi
-else
-# Disable fiddle to avoid a build failure with bundled-libffi on MIPS
-RUBY_CONF_OPTS += --with-out-ext=fiddle
-endif
 ifeq ($(BR2_PACKAGE_GDBM),y)
 RUBY_DEPENDENCIES += gdbm
 endif
@@ -82,13 +73,12 @@
 RUBY_CONF_OPTS += --without-gmp
 endif
 
-RUBY_CFLAGS = $(TARGET_CFLAGS)
-
-ifeq ($(BR2_TOOLCHAIN_HAS_GCC_BUG_83143),y)
-RUBY_CFLAGS += -freorder-blocks-algorithm=simple
-endif
-
-RUBY_CONF_OPTS += CFLAGS="$(RUBY_CFLAGS)"
+# workaround for amazing build failure, see
+# http://lists.busybox.net/pipermail/buildroot/2014-December/114273.html
+define RUBY_REMOVE_VERCONF_H
+	rm -f $(@D)/verconf.h
+endef
+RUBY_POST_CONFIGURE_HOOKS += RUBY_REMOVE_VERCONF_H
 
 # Remove rubygems and friends, as they need extensions that aren't
 # built and a target compiler.
